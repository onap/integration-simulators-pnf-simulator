<?xml version="1.0" encoding="UTF-8"?>
<!--
  ============LICENSE_START=======================================================
  Simulator
  ================================================================================
  Copyright (C) 2019 Nokia. All rights reserved.
  ================================================================================
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  ============LICENSE_END=========================================================
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.onap.integration.simulators.pnf-simulator</groupId>
    <artifactId>integration-pnf-simulator</artifactId>
    <version>1.0.6-SNAPSHOT</version>
  </parent>

  <artifactId>netconfsimulator</artifactId>
  <version>1.0.6-SNAPSHOT</version>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>
    <docker.registry>nexus3.onap.org:10003</docker.registry>
    <docker.image.tag>latest</docker.image.tag>
    <dependency.directory.name>libs</dependency.directory.name>
    <dependency.directory.location>${project.build.directory}/${dependency.directory.name}
    </dependency.directory.location>
    <netopeer-saver-project-name>netopeer-change-saver</netopeer-saver-project-name>
    <netopeer-saver-source-dir>${project.basedir}/netopeer-change-saver-native</netopeer-saver-source-dir>
    <netopeer-saver-build-dir>${project.build.directory}/cmake</netopeer-saver-build-dir>
    <netopeer-saver-executable-dir>${netopeer-saver-build-dir}/bin</netopeer-saver-executable-dir>
    <proxy>""</proxy>
    <project.build.integrationTestSourceDirectory>${project.basedir}/src/it/java</project.build.integrationTestSourceDirectory>
    <build-helper-maven-plugin.version>3.1.0</build-helper-maven-plugin.version>
  </properties>

  <dependencies>

    <!--  Compile DEPENDENCIES  -->

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-websocket</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
        <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.onosproject</groupId>
      <artifactId>jnc</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.websocket</groupId>
      <artifactId>javax.websocket-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpmime</artifactId>
    </dependency>
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger2</artifactId>
    </dependency>
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger-ui</artifactId>
    </dependency>

      <!-- Kafka -->

    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka</artifactId>
    </dependency>

    <!--  TEST DEPENDENCIES  -->

    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
        <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
        <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
        <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
        <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
        <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
        <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka-test</artifactId>
        <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.bitbucket.radistao.test</groupId>
      <artifactId>before-after-spring-test-runner</artifactId>
        <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.palantir.docker.compose</groupId>
      <artifactId>docker-compose-rule-junit4</artifactId>
        <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <configuration>
          <outputDirectory>${dependency.directory.location}</outputDirectory>
          <includeScope>runtime</includeScope>
          <silent>true</silent>
        </configuration>
        <executions>
          <execution>
            <id>copy-external-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skipTests>${skip-unit-tests}</skipTests>
          <detail>true</detail>
          <printSummary>true</printSummary>
          <useSystemClassLoader>false</useSystemClassLoader>
        </configuration>
      </plugin>
      <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <configuration>
              <testSourceDirectory>${project.build.integrationTestSourceDirectory}</testSourceDirectory>
              <skipITs>${skip-integration-tests}</skipITs>
          </configuration>
      </plugin>
        <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>${build-helper-maven-plugin.version}</version>
            <executions>
                <execution>
                    <id>add-integration-test-source-as-test-sources</id>
                    <phase>generate-test-sources</phase>
                    <goals>
                        <goal>add-test-source</goal>
                    </goals>
                    <configuration>
                        <sources>
                            <source>${project.build.integrationTestSourceDirectory}</source>
                        </sources>
                    </configuration>
                </execution>
            </executions>
        </plugin>
        <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <executions>
                <execution>
                    <id>prepare-agent</id>
                    <goals>
                        <goal>prepare-agent</goal>
                    </goals>
                </execution>
                <execution>
                    <id>report</id>
                    <goals>
                        <goal>report</goal>
                    </goals>
                    <configuration>
                        <dataFile>${project.build.directory}/code-coverage/jacoco.exec</dataFile>
                        <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                    </configuration>
                </execution>
            </executions>
        </plugin>
    </plugins>
  </build>
    <profiles>
        <profile>
            <id>docker</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <os.detected.name>linux</os.detected.name>
                <os.detected.arch>x86_64</os.detected.arch>
                <os.detected.classifier>${os.detected.name}-${os.detected.arch}</os.detected.classifier>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${docker-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>docker-build-image</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>docker-push-image</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>push</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <skipPush>${skipDockerPush}</skipPush>
                            <verbose>true</verbose>
                            <imagePullPolicy>IfNotPresent</imagePullPolicy>
                            <images>
                                <image>
                                    <alias>${project.artifactId}</alias>
                                    <name>${docker-image.namespace}/${docker-image.name.prefix}.${artifactId}</name>
                                    <registry>${onap.nexus.dockerregistry.daily}</registry>
                                    <build>
                                        <contextDir>${project.basedir}</contextDir>
                                        <dockerFile>${project.basedir}/Dockerfile_app</dockerFile>
                                        <tags>
                                            <tag>${project.version}-STAGE-${maven.build.timestamp}Z</tag>
                                        </tags>
                                    </build>
                                </image>
                                <image>
                                    <name>${docker-image.namespace}/${docker-image.name.prefix}.netopeer</name>
                                    <build>
                                        <contextDir>${project.basedir}</contextDir>
                                        <dockerFile>${project.basedir}/Dockerfile_netopeer</dockerFile>
                                        <tags>
                                            <tag>${project.version}-STAGE-${maven.build.timestamp}Z</tag>
                                        </tags>
                                        <args>
                                            <PROXY>${proxy}</PROXY>
                                        </args>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
  <repositories>
    <repository>
      <id>Palantir</id>
      <url>https://dl.bintray.com/palantir/releases/</url>
    </repository>
  </repositories>

    <distributionManagement>
        <repository>
            <id>ecomp-releases</id>
            <name>Integration simulators Release Repository</name>
            <url>${nexusproxy}${releaseNexusPath}</url>
        </repository>
        <snapshotRepository>
            <id>ecomp-snapshots</id>
            <name>Integration simulators Snapshot Repository</name>
            <url>${nexusproxy}${snapshotNexusPath}</url>
        </snapshotRepository>
        <site>
            <id>ecomp-site</id>
            <url>dav:${nexusproxy}${sitePath}</url>
        </site>
    </distributionManagement>

</project>
